import {formatLicensePlate, isValidLicensePlate} from "../index";

test('CD1234 should return true', () => expect(isValidLicensePlate('CD1234', "BE")).toBe(true));
test('CDA123 should return true', () => expect(isValidLicensePlate('CDA123', "BE")).toBe(true));
test('CD123A should return true', () => expect(isValidLicensePlate('CD123A', "BE")).toBe(true));
test('CDAB123 should return true', () => expect(isValidLicensePlate('CDAB123', "BE")).toBe(true));
test('A1 should return true', () => expect(isValidLicensePlate('A1', "BE")).toBe(true));
test('A12 should return true', () => expect(isValidLicensePlate('A12', "BE")).toBe(true));
test('A123 should return true', () => expect(isValidLicensePlate('A123', "BE")).toBe(true));
test('P1 should return true', () => expect(isValidLicensePlate('P1', "BE")).toBe(true));
test('P12 should return true', () => expect(isValidLicensePlate('P12', "BE")).toBe(true));
test('P123 should return true', () => expect(isValidLicensePlate('P123', "BE")).toBe(true));
test('E1 should return true', () => expect(isValidLicensePlate('E1', "BE")).toBe(true));
test('E12 should return true', () => expect(isValidLicensePlate('E12', "BE")).toBe(true));
test('E123 should return true', () => expect(isValidLicensePlate('E123', "BE")).toBe(true));
test('VABC123 should return true', () => expect(isValidLicensePlate('VABC123', "BE")).toBe(true));
test('YABC123 should return true', () => expect(isValidLicensePlate('YABC123', "BE")).toBe(true));
test('ZABC123 should return true', () => expect(isValidLicensePlate('ZABC123', "BE")).toBe(true));
test('GABC123 should return true', () => expect(isValidLicensePlate('GABC123', "BE")).toBe(true));
test('MABC123 should return true', () => expect(isValidLicensePlate('MABC123', "BE")).toBe(true));
test('OABC123 should return true', () => expect(isValidLicensePlate('OABC123', "BE")).toBe(true));
test('QABC123 should return true', () => expect(isValidLicensePlate('QABC123', "BE")).toBe(true));
test('TABC123 should return true', () => expect(isValidLicensePlate('TABC123', "BE")).toBe(true));
test('SAAB123 should return true', () => expect(isValidLicensePlate('SAAB123', "BE")).toBe(true));
test('SBAB123 should return true', () => expect(isValidLicensePlate('SBAB123', "BE")).toBe(true));
test('SPAB123 should return true', () => expect(isValidLicensePlate('SPAB123', "BE")).toBe(true));
test('SUAB123 should return true', () => expect(isValidLicensePlate('SUAB123', "BE")).toBe(true));
test('WAABC123 should return true', () => expect(isValidLicensePlate('WAABC123', "BE")).toBe(true));
test('WMABC123 should return true', () => expect(isValidLicensePlate('WMABC123', "BE")).toBe(true));
test('WQABC123 should return true', () => expect(isValidLicensePlate('WQABC123', "BE")).toBe(true));
test('WSABC123 should return true', () => expect(isValidLicensePlate('WSABC123', "BE")).toBe(true));
test('XA12ABC should return true', () => expect(isValidLicensePlate('XA12ABC', "BE")).toBe(true));
test('XM12ABC should return true', () => expect(isValidLicensePlate('XM12ABC', "BE")).toBe(true));
test('XQ12ABC should return true', () => expect(isValidLicensePlate('XQ12ABC', "BE")).toBe(true));
test('XS12ABC should return true', () => expect(isValidLicensePlate('XS12ABC', "BE")).toBe(true));
test('XB12ABC should return true', () => expect(isValidLicensePlate('XB12ABC', "BE")).toBe(true));
test('1ABC123 should return true', () => expect(isValidLicensePlate('1ABC123', "BE")).toBe(true));
test('ABC123 should return true', () => expect(isValidLicensePlate('ABC123', "BE")).toBe(true));
test('123ABC should return true', () => expect(isValidLicensePlate('123ABC', "BE")).toBe(true));
test('123456 should return true', () => expect(isValidLicensePlate('123456', "BE")).toBe(true));
test('1123456 should return true', () => expect(isValidLicensePlate('1123456', "BE")).toBe(true));
test('1 should return true', () => expect(isValidLicensePlate('1', "BE", true)).toBe(true));
test('1A should return true', () => expect(isValidLicensePlate('1A', "BE", true)).toBe(true));
test('12DVS should return true', () => expect(isValidLicensePlate('12DVS', "BE", true)).toBe(true));
test('12DL-ED should return true', () => expect(isValidLicensePlate('12DL-ED', "BE", true)).toBe(true));
test('12-DL-ED should return true', () => expect(isValidLicensePlate('12-DL-ED', "BE", true)).toBe(true));

test('CDAZ12 should return false', () => expect(isValidLicensePlate('CDAZ12', "BE")).toBe(false));
test('1234-DEL-C should return false', () => expect(isValidLicensePlate('1234-DEL-C', "BE", true)).toBe(false));

test('CD1234 should return CD-1234', () => expect(formatLicensePlate('CD1234', "BE")).toBe('CD-1234'));
test('CDA123 should return CD-A-123', () => expect(formatLicensePlate('CDA123', "BE")).toBe('CD-A-123'));
test('CD123A should return CD-123-A', () => expect(formatLicensePlate('CD123A', "BE")).toBe('CD-123-A'));
test('CDAB123 should return CD-AB-123', () => expect(formatLicensePlate('CDAB123', "BE")).toBe('CD-AB-123'));
test('A1 should return A-1', () => expect(formatLicensePlate('A1', "BE")).toBe('A-1'));
test('A12 should return A-12', () => expect(formatLicensePlate('A12', "BE")).toBe('A-12'));
test('A123 should return A-123', () => expect(formatLicensePlate('A123', "BE")).toBe('A-123'));
test('P1 should return P-1', () => expect(formatLicensePlate('P1', "BE")).toBe('P-1'));
test('P12 should return P-12', () => expect(formatLicensePlate('P12', "BE")).toBe('P-12'));
test('P123 should return P-123', () => expect(formatLicensePlate('P123', "BE")).toBe('P-123'));
test('E1 should return E-1', () => expect(formatLicensePlate('E1', "BE")).toBe('E-1'));
test('E12 should return E-12', () => expect(formatLicensePlate('E12', "BE")).toBe('E-12'));
test('E123 should return E-123', () => expect(formatLicensePlate('E123', "BE")).toBe('E-123'));
test('VABC123 should return V-ABC-123', () => expect(formatLicensePlate('VABC123', "BE")).toBe('V-ABC-123'));
test('YABC123 should return Y-ABC-123', () => expect(formatLicensePlate('YABC123', "BE")).toBe('Y-ABC-123'));
test('ZABC123 should return Z-ABC-123', () => expect(formatLicensePlate('ZABC123', "BE")).toBe('Z-ABC-123'));
test('GABC123 should return G-ABC-123', () => expect(formatLicensePlate('GABC123', "BE")).toBe('G-ABC-123'));
test('MABC123 should return M-ABC-123', () => expect(formatLicensePlate('MABC123', "BE")).toBe('M-ABC-123'));
test('OABC123 should return O-ABC-123', () => expect(formatLicensePlate('OABC123', "BE")).toBe('O-ABC-123'));
test('QABC123 should return Q-ABC-123', () => expect(formatLicensePlate('QABC123', "BE")).toBe('Q-ABC-123'));
test('TABC123 should return T-ABC-123', () => expect(formatLicensePlate('TABC123', "BE")).toBe('T-ABC-123'));
test('SAAB123 should return SAAB 123', () => expect(formatLicensePlate('SAAB123', "BE")).toBe('SAAB 123'));
test('SBAB123 should return SBAB 123', () => expect(formatLicensePlate('SBAB123', "BE")).toBe('SBAB 123'));
test('SPAB123 should return SPAB 123', () => expect(formatLicensePlate('SPAB123', "BE")).toBe('SPAB 123'));
test('SUAB123 should return SUAB 123', () => expect(formatLicensePlate('SUAB123', "BE")).toBe('SUAB 123'));
test('WAABC123 should return WA-ABC-123', () => expect(formatLicensePlate('WAABC123', "BE")).toBe('WA-ABC-123'));
test('WMABC123 should return WM-ABC-123', () => expect(formatLicensePlate('WMABC123', "BE")).toBe('WM-ABC-123'));
test('WQABC123 should return WQ-ABC-123', () => expect(formatLicensePlate('WQABC123', "BE")).toBe('WQ-ABC-123'));
test('WSABC123 should return WS-ABC-123', () => expect(formatLicensePlate('WSABC123', "BE")).toBe('WS-ABC-123'));
test('XA12ABC should return XA-12-ABC', () => expect(formatLicensePlate('XA12ABC', "BE")).toBe('XA-12-ABC'));
test('XM12ABC should return XM-12-ABC', () => expect(formatLicensePlate('XM12ABC', "BE")).toBe('XM-12-ABC'));
test('XQ12ABC should return XQ-12-ABC', () => expect(formatLicensePlate('XQ12ABC', "BE")).toBe('XQ-12-ABC'));
test('XS12ABC should return XS-12-ABC', () => expect(formatLicensePlate('XS12ABC', "BE")).toBe('XS-12-ABC'));
test('XB12ABC should return XB-12-ABC', () => expect(formatLicensePlate('XB12ABC', "BE")).toBe('XB-12-ABC'));
test('1ABC123 should return 1-ABC-123', () => expect(formatLicensePlate('1ABC123', "BE")).toBe('1-ABC-123'));
test('ABC123 should return ABC-123', () => expect(formatLicensePlate('ABC123', "BE")).toBe('ABC-123'));
test('123ABC should return 123-ABC', () => expect(formatLicensePlate('123ABC', "BE")).toBe('123-ABC'));
test('123456 should return 123456', () => expect(formatLicensePlate('123456', "BE")).toBe('123456'));
test('1123456 should return 1-123456', () => expect(formatLicensePlate('1123456', "BE")).toBe('1-123456'));
test('1 should return 1', () => expect(formatLicensePlate('1', "BE", true)).toBe('1'));
test('1A should return 1A', () => expect(formatLicensePlate('1A', "BE", true)).toBe('1A'));
test('12DVS should return 12DVS', () => expect(formatLicensePlate('12DVS', "BE", true)).toBe('12DVS'));
test('12DL-ED should return 12DL-ED ', () => expect(formatLicensePlate('12DL-ED', "BE", true)).toBe('12DL-ED'));
test('12-DL-ED should return 12-DL-ED', () => expect(formatLicensePlate('12-DL-ED', "BE", true)).toBe('12-DL-ED'));
